<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="ko">
<head>
<meta charset="UTF-8">
<title>좌석 선택</title>
<style>
body {
	margin: 0;
	font-family: system-ui, -apple-system, Segoe UI, Roboto, "Noto Sans KR",
		sans-serif;
	background: #111;
	color: #eee
}

.wrap {
	max-width: 960px;
	margin: 24px auto;
	padding: 0 16px
}

h1 {
	font-size: 22px;
	margin: 16px 0 12px;
	text-align: center
}

.person-selector {
	text-align: center;
	margin: 20px 0
}

.person-selector select {
	padding: 8px 16px;
	border: 1px solid #555;
	border-radius: 6px;
	background: #2a2a2a;
	color: #ddd;
	font-size: 16px;
	cursor: pointer
}

.screen {
	background: linear-gradient(135deg, #444, #333);
	color: #fff;
	text-align: center;
	padding: 12px;
	border-radius: 8px;
	margin: 20px auto;
	font-weight: bold;
	box-shadow: 0 2px 10px rgba(0, 0, 0, .3)
}

.theater {
	background: #1a1a1a;
	border-radius: 12px;
	padding: 20px;
	margin: 20px 0
}

.seating-grid {
	display: grid;
	grid-template-columns: 50px repeat(2, 40px) 20px repeat(6, 40px) 20px
		repeat(2, 40px);
	gap: 8px;
	justify-content: center;
	align-items: center
}

.row-header, .col-header {
	color: #aaa;
	text-align: center;
	font-size: 14px
}

.seat-container {
	position: relative
}

.seat-checkbox {
	position: absolute;
	opacity: 0;
	width: 0;
	height: 0
}

.seat {
	display: block;
	width: 36px;
	height: 36px;
	line-height: 34px;
	text-align: center;
	border: 1px solid #444;
	border-radius: 6px;
	background: #2a2a2a;
	cursor: pointer;
	user-select: none;
	transition: all .2s ease;
	font-size: 12px;
	color: #ccc
}

.seat:hover {
	background: #3a3a3a;
	border-color: #666
}

.seat-checkbox:checked+.seat {
	background: #ff3d7b;
	border-color: #ff3d7b;
	color: #fff;
	box-shadow: 0 0 10px rgba(255, 61, 123, .3)
}

.selected-info {
	text-align: center;
	margin: 20px 0;
	padding: 15px;
	background: #222;
	border-radius: 8px;
	border-left: 4px solid #ff3d7b
}

.selected-seats {
	margin-top: 10px;
	color: #ff3d7b;
	font-weight: bold
}

.actions {
	text-align: center;
	margin-top: 30px
}

.btn {
	padding: 12px 24px;
	border: 0;
	border-radius: 8px;
	cursor: pointer;
	font-size: 14px;
	font-weight: 500;
	margin: 0 8px;
	transition: all .2s ease
}

.btn.primary {
	background: #ff3d7b;
	color: #fff
}

.btn.primary:disabled {
	background: #666;
	cursor: not-allowed
}

.btn.secondary {
	background: #333;
	color: #ddd;
	border: 1px solid #555
}

.warning {
	color: #ff6b6b;
	font-size: 14px;
	margin-top: 10px
}
/* 예매 완료 모달 */
.modal {
	display: none;
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, .8);
	z-index: 1000
}

.modal-content {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	background: #1a1a1a;
	border-radius: 12px;
	padding: 30px;
	max-width: 400px;
	width: 90%;
	text-align: center;
	border: 1px solid #333
}

.modal-content h2 {
	color: #ff3d7b;
	margin-bottom: 20px;
	font-size: 24px
}

.booking-info {
	background: #222;
	padding: 20px;
	border-radius: 8px;
	margin: 20px 0;
	text-align: left
}

.booking-info div {
	margin: 8px 0;
	display: flex;
	justify-content: space-between
}

.booking-info .label {
	color: #aaa
}

.booking-info .value {
	color: #fff;
	font-weight: bold
}

.booking-number {
	background: #ff3d7b;
	color: #fff;
	padding: 10px;
	border-radius: 6px;
	font-weight: bold;
	font-size: 18px;
	margin: 15px 0
}
</style>
</head>
<body>
	<%@ include file="header.jsp"%>

	<div class="wrap">
		<h1>좌석 선택</h1>

		<div class="person-selector">
			<label>인원 수: </label> <select id="personCount">
				<option value="1">1명</option>
				<option value="2">2명</option>
				<option value="3">3명</option>
				<option value="4">4명</option>
				<option value="5">5명</option>
				<option value="6">6명</option>
			</select>
		</div>

		<div class="screen">SCREEN</div>

		<div class="theater">
			<div class="seating-grid" id="grid"></div>

			<div class="selected-info" id="selectedInfo" style="display: none;">
				<div>
					선택된 좌석 (<span id="selectedCount">0</span>/<span id="maxCount">1</span>)
				</div>
				<div class="selected-seats" id="selectedSeats"></div>
				<div class="warning" id="warning" style="display: none;"></div>
			</div>

			<div class="actions">
				<button type="button" class="btn primary" id="confirmBtn" disabled
					onclick="completeBooking()">좌석 선택 완료</button>
				<button type="button" class="btn secondary" onclick="history.back()">뒤로가기</button>
			</div>
		</div>
	</div>

	<!-- 예매 완료 모달 -->
	<div class="modal" id="bookingModal">
		<div class="modal-content">
			<h2>🎬 예매가 완료되었습니다!</h2>
			<div class="booking-info">
				<div>
					<span class="label">영화:</span><span class="value">어벤져스: 엔드게임</span>
				</div>
				<div>
					<span class="label">극장:</span><span class="value">서울도심영화관</span>
				</div>
				<div>
					<span class="label">상영일시:</span><span class="value">2025년 8월
						20일 13:30</span>
				</div>
				<div>
					<span class="label">좌석:</span><span class="value" id="modalSeats"></span>
				</div>
				<div>
					<span class="label">인원:</span><span class="value" id="modalPersons"></span>
				</div>
				<div>
					<span class="label">총 금액:</span><span class="value" id="modalPrice"></span>
				</div>
			</div>
			<div class="booking-number">
				예매번호: <span id="bookingNumber"></span>
			</div>
			<div class="actions">
				<button type="button" class="btn primary" onclick="goHome()">홈으로</button>
				<button type="button" class="btn secondary" onclick="closeModal()">뒤로가기</button>
			</div>
		</div>
	</div>

	<script>
//설정
const ROWS = ["A","B","C","D"];
const COLS = [1,2, "gap", 3,4,5,6,7,8, "gap", 9,10]; // 복도 유지
const PRICE = 14000; // 금액

// ====== 상태 ======
let maxSeats = 1;
let selectedSeats = [];

//좌석 그리드 동적 생성 (C3, C5, C10 포함 전부 선택 가능)
(function buildGrid(){
  const grid = document.getElementById('grid');

  // 열 헤더 라인
  grid.appendChild(document.createElement('div')); // 왼쪽 빈칸
  for (const c of COLS){
    const el = document.createElement('div');
    if (c === "gap") el.textContent = "";
    else { el.className = "col-header"; el.textContent = c; }
    grid.appendChild(el);
  }

  // 각 행
  for (const r of ROWS){
    // 행 머리글
    const rowHead = document.createElement('div');
    rowHead.className = "row-header";
    rowHead.textContent = r;
    grid.appendChild(rowHead);

    // 좌석들
    for (const c of COLS){
      const cell = document.createElement('div');
      if (c === "gap"){
        grid.appendChild(cell); // 빈칸(복도)
        continue;
      }
      cell.className = "seat-container";

      const id = r + c;
      const input = document.createElement('input');
      input.type = "checkbox";
      input.className = "seat-checkbox";
      input.id = id;
      input.value = id;

      const label = document.createElement('label');
      label.className = "seat";
      label.setAttribute('for', id);
      label.textContent = id;

      cell.appendChild(input);
      cell.appendChild(label);
      grid.appendChild(cell);
    }
  }
})();

// 인원 선택
document.getElementById('personCount').addEventListener('change', function(){
  maxSeats = parseInt(this.value, 10);
  document.getElementById('maxCount').textContent = maxSeats;
  if (selectedSeats.length > maxSeats){
    document.querySelectorAll('.seat-checkbox').forEach(cb => cb.checked = false);
    selectedSeats = [];
  }
  updateDisplay();
});

// 이벤트 위임으로 좌석 선택 관리
document.getElementById('grid').addEventListener('change', function(e){
  if (!e.target.classList.contains('seat-checkbox')) return;
  const seatValue = e.target.value;
  if (e.target.checked){
    if (selectedSeats.length >= maxSeats){
      e.target.checked = false;
      showWarning(`최대 ${maxSeats}명까지 선택 가능합니다.`);
      return;
    }
    selectedSeats.push(seatValue);
  } else {
    selectedSeats = selectedSeats.filter(s => s !== seatValue);
  }
  updateDisplay();
});

// 예매 완료 처리
function completeBooking(){
  if (selectedSeats.length !== maxSeats){
    showWarning(`정확히 ${maxSeats}명의 좌석을 선택해주세요.`);
    return;
  }
  document.getElementById('modalSeats').textContent = selectedSeats.join(', ');
  document.getElementById('modalPersons').textContent = maxSeats + '명';
  document.getElementById('modalPrice').textContent = (maxSeats * PRICE).toLocaleString() + '원';
  document.getElementById('bookingNumber').textContent = genBookingNumber('LX', 8); // ← 길이 바꾸려면 두번째 인자 변경
  document.getElementById('bookingModal').style.display = 'block';

  // 예매 완료 후 좌석 고정(선택 불가)
  document.querySelectorAll('.seat-checkbox').forEach(cb=>{
    if (selectedSeats.includes(cb.value)) {
      cb.disabled = true;
      cb.parentElement.querySelector('.seat').style.opacity = 0.85;
    } else {
      cb.checked = false;
      cb.disabled = true; // 전체 잠금(필요 없으면 이 줄 제거)
    }
  });
}

// LX + 숫자만 랜덤 N자리
function genBookingNumber(prefix='LX', digits=8){
  let s = '';
  for (let i=0;i<digits;i++){
    s += Math.floor(Math.random()*10); // 0~9
  }
  return prefix + s;
}

function goHome(){ window.location.href = 'home.do'; }
document.getElementById('bookingModal').addEventListener('click', e => { if (e.target === e.currentTarget) goHome(); });

function goHome(){ 
	  window.location.href = 'home.do'; 
	}

	// === 여기부터 추가 ===
	function closeModal() {
	  document.getElementById('bookingModal').style.display = 'none';
	}

	// 백드롭 클릭 시 모달만 닫기
	document.getElementById('bookingModal').addEventListener('click', function(e) {
	  if (e.target === this) closeModal();
	});

	// 모달 내부 클릭은 버블링 방지 (선택)
	document.querySelector('#bookingModal .modal-content')
	  .addEventListener('click', (e) => e.stopPropagation());
	
</script>
</body>
</html>